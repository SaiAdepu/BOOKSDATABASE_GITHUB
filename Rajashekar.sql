--DONE BY RAJASHEKAR
--DATABASE CREATION
CREATE DATABASE BOOKSDATABASE
USE BOOKSDATABASE

--CREATION OF BOOKS TABLE
create table BOOKSTABLE(BID INT PRIMARY KEY,BNAME VARCHAR(20) NOT NULL,PRICE SMALLMONEY NOT NULL,PUBLISHDATE DATETIME NOT NULL)
SP_HELP BOOKSTABLE

--CREATION OF CUSTOMERS TABLE
DROP TABLE CUSTOMERSTABLE
CREATE TABLE CUSTOMERSTABLE(CID INT PRIMARY KEY,CNAME VARCHAR(20) NOT NULL,BID INT FOREIGN KEY REFERENCES BOOKSTABLE(BID))
SP_HELP CUSTOMERSTABLE

--CREATION OF AUTHORS TABLE
CREATE TABLE AUTHORSTABLE(BID INT FOREIGN KEY REFERENCES BOOKSTABLE(BID),ANAME VARCHAR(20)NOT NULL,AID INT)
SP_HELP AUTHORSTABLE

-- UNIQUE INDEX FOR AUTHOR ID
CREATE UNIQUE INDEX ANO ON AUTHORSTABLE(AID)

--INSERTING VALUES INTO BOOKSTABLE
INSERT INTO BOOKSTABLE VALUES(1,'C',120,'1978-02-22'),(2,'JAVA',350,'1995-08-01'),(3,'DS',500,'2019-03-01'),(4,'.NET',800,'2020-04-01')
SELECT *FROM BOOKSTABLE
--INSERTING VALUES INTO CUSTOMERSTABLE

INSERT INTO CUSTOMERSTABLE VALUES(1001,'CITY',1),(1002,'TOWN',2)

INSERT INTO CUSTOMERSTABLE(CID,CNAME,BID) VALUES(1003,'RAJU',1)
INSERT INTO CUSTOMERSTABLE(CID,CNAME,BID) VALUES(1004,'KIRAN',1)

INSERT INTO CUSTOMERSTABLE(CID,CNAME) VALUES(1005,'SURESH')
SELECT *FROM CUSTOMERSTABLE

--INSERTING VALUES INTO AUTHORSTABLE

INSERT INTO AUTHORSTABLE VALUES(1,'DENNIS RITCHIE',123),(2,'JAMES GOSLING',456)
COMMIT
S
SELECT A.*,B.*,C.* FROM BOOKSTABLE B,AUTHORSTABLE A,CUSTOMERSTABLE C
--1)List the Books details which book have At least one author,one customer exists.
SELECT *FROM BOOKSTABLE WHERE EXISTS(SELECT ANAME,CNAME FROM AUTHORSTABLE,CUSTOMERSTABLE WHERE 
AUTHORSTABLE.BID=BOOKSTABLE.BID OR CUSTOMERSTABLE.BID=BOOKSTABLE.BID)

--2)List the all Books,Authors,Customers details.
SELECT * FROM BOOKSTABLE FULL JOIN AUTHORSTABLE ON BOOKSTABLE.BID=AUTHORSTABLE.BID FULL JOIN CUSTOMERSTABLE ON BOOKSTABLE.BID=CUSTOMERSTABLE.BID

 --3)To print the books details which books published date between ’01-dec-2019’ to ’04-apr-20’.
 SELECT *FROM BOOKSTABLE WHERE PUBLISHDATE BETWEEN '2019-12-01' AND '2020-04-04'

 --4)List the Books details Which book at least 3 or more customers.
 SELECT BNAME,COUNT(CNAME) FROM BOOKSTABLE,CUSTOMERSTABLE WHERE BOOKSTABLE.BID=CUSTOMERSTABLE.BID GROUP BY BNAME HAVING COUNT(CNAME)>=3

 --5)List the Book details which book price is highest.
 SELECT *FROM BOOKSTABLE WHERE PRICE=(SELECT MAX(PRICE) FROM BOOKSTABLE)

--6)List the Customer details which customer not taken any books.
SELECT *FROM CUSTOMERSTABLE WHERE NOT EXISTS(SELECT *FROM BOOKSTABLE WHERE CUSTOMERSTABLE.BID=BOOKSTABLE.BID)

--7)List the total number of authors,number of customers based on book id.
 SELECT COUNT(A.ANAME),COUNT(C.CNAME) FROM AUTHORSTABLE A ,CUSTOMERSTABLE C  WHERE A.BID=C.BID   
 
--8)To display the book names for given book id using UDF[User Defined Function].
CREATE FUNCTION F8(@BID INT)
RETURNS VARCHAR(20)
AS
BEGIN
DECLARE @BN VARCHAR(20)
SELECT @BN=BNAME FROM BOOKSTABLE WHERE BID=@BID
RETURN @BN
END
    SELECT DBO.F8(1)


--9) To insert record into books table using procedure.
  CREATE PROC INSERT_TO_BOOK3(@BOOKSID INT,@BOOKNAME VARCHAR(20),@BOOKPRICE SMALLMONEY)
AS
BEGIN
DECLARE @DATE DATETIME
SET @DATE=GETDATE()
INSERT INTO BOOKSTABLE VALUES(@BOOKSID,@BOOKNAME,@BOOKPRICE,@DATE)
END

		EXEC INSERT_TO_BOOK3 3,'SCIENCE',500

SELECT * FROM BOOKSTABLE

--10)To restrict insertion or deletion only to allow Monday to Saturday on Books table.
CREATE TRIGGER TB1
ON BOOKSTABLE
FOR INSERT,DELETE
AS
BEGIN
IF DATENAME(DW,GETDATE())='SUNDAY'
BEGIN
RAISERROR('CANT INSERT,DELETE ON SUNDAY',1,1)
ROLLBACK
END
END
  
--EXECUTION
INSERT INTO BOOKSTABLE VALUES(8,'SCIEN',200,GETDATE())

  --11)Using Dynamic query procedure to add ‘Gender’ column in customer table.
CREATE PROC DYQ(@TN VARCHAR(20),@COL VARCHAR(20),@DT VARCHAR(20))
AS
BEGIN
--EXECUTING THE ALTER QUERY WITH VARIABLE NAME
EXEC('ALTER TABLE ' + @TN +' ADD'+' ' + @COL + ' '+@DT)
END
--EXECUTION
EXEC DYQ 'CUSTOMERSTABLE','GENDER','VARCHAR(12)'
SELECT *FROM CUSTOMERSTABLE

 --12)To display All records of Books,Customer details which book id is Common using ‘cursor’.
  DECLARE C1 CURSOR FOR SELECT *FROM BOOKSTABLE,CUSTOMERSTABLE WHERE BOOKSTABLE.BID=CUSTOMERSTABLE.BID
  --VARIABLE DECLARATION FOR RETRIVING AND STORING DATA INTO THEM
  DECLARE @BID INT,@BNA VARCHAR(20),@P SMALLMONEY,@PD DATETIME,@CID INT,@CNA VARCHAR(20),@BI INT
  OPEN C1
  --INITIALIZING THE STARTING POINT OF THE CURSOR
  FETCH NEXT FROM C1 INTO @BID,@BNA,@P,@PD,@CID,@CNA,@BI
  --LOOP WILL BE REPEATED UNTIL CURSOR POINTS TO LAST RECORD
  WHILE @@FETCH_STATUS=0
  BEGIN
  --PRINTING CURSOR VALUES
  PRINT CAST(@BID AS VARCHAR)+' '+@BNA+'  '+CAST(@P AS VARCHAR)+'   '+CAST(@PD AS VARCHAR)+' '+CAST(@CID AS VARCHAR)+'   '+@CNA+' '+CAST(@BI AS VARCHAR)
  FETCH NEXT FROM C1 INTO @BID,@BNA,@P,@PD,@CID,@CNA,@BI
  END
  --CLOSING THE CURSOR
  CLOSE C1
  --DEALLOCATING THE CURSOR
  DEALLOCATE C1