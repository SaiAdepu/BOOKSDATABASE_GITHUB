--Done by spandana
create Database BOOKSDATABASE
use BOOKSDATABASE

--BOOKS TABLE
create table BOOKSTABLE(BID INT PRIMARY KEY,BNAME VARCHAR(20) NOT NULL,PRICE SMALLMONEY NOT NULL,PUBLISHDATE DATETIME NOT NULL)
SP_HELP BOOKSTABLE

--CUSTOMERS TABLE
DROP TABLE CUSTOMERSTABLE
CREATE TABLE CUSTOMERSTABLE(CID INT PRIMARY KEY,CNAME VARCHAR(20) NOT NULL,BID INT FOREIGN KEY REFERENCES BOOKSTABLE(BID))
SP_HELP CUSTOMERSTABLE

--AUTHORS TABLE
CREATE TABLE AUTHORSTABLE(BID INT FOREIGN KEY REFERENCES BOOKSTABLE(BID),ANAME VARCHAR(20)NOT NULL,AID INT)
SP_HELP AUTHORSTABLE
-- UNIQUE INDEX FOR AUTHOR ID
CREATE UNIQUE INDEX ANO ON AUTHORSTABLE(AID)

begin TRANSACTION

INSERT INTO BOOKSTABLE VALUES(1,'C',120,'1978-02-22'),(2,'JAVA',350,'1995-08-01')

INSERT INTO CUSTOMERSTABLE VALUES(1001,'CITY',1),(1002,'TOWN',2)

INSERT INTO AUTHORSTABLE VALUES(1,'DENNIS RITCHIE',123),(2,'JAMES GOSLING',456)
COMMIT

--1)
SELECT *FROM BOOKSTABLE WHERE EXISTS(SELECT ANAME,CNAME FROM AUTHORSTABLE,CUSTOMERSTABLE WHERE 
AUTHORSTABLE.BID=BOOKSTABLE.BID OR CUSTOMERSTABLE.BID=BOOKSTABLE.BID)

--2)
SELECT * FROM BOOKSTABLE,AUTHORSTABLE,CUSTOMERSTABLE

--3)
SELECT *FROM BOOKSTABLE WHERE PUBLISHDATE BETWEEN '2019-12-01' AND '2020-04-04'

--4)
SELECT BNAME,COUNT(CNAME) FROM BOOKSTABLE,CUSTOMERSTABLE WHERE BOOKSTABLE.BID=CUSTOMERSTABLE.BID GROUP BY BNAME HAVING COUNT(CNAME)>=3

--5)
SELECT *FROM BOOKSTABLE WHERE PRICE=(SELECT MAX(PRICE) FROM BOOKSTABLE)

--6)
SELECT *FROM CUSTOMERSTABLE WHERE NOT EXISTS(SELECT *FROM BOOKSTABLE WHERE CUSTOMERSTABLE.BID=BOOKSTABLE.BID)

--7)
SELECT ANAME,CNAME,COUNT(ANAME),COUNT(CNAME) FROM AUTHORSTABLE,CUSTOMERSTABLE,BOOKSTABLE 
WHERE AUTHORSTABLE.BID=BOOKSTABLE.BID AND 
CUSTOMERSTABLE.BID=BOOKSTABLE.BID GROUP BY ANAME,CNAME WITH ROLLUP

SELECT COUNT(ANAME),COUNT(CNAME) FROM AUTHORSTABLE A ,CUSTOMERSTABLE C  WHERE A.BID=C.BID   

--8)
CREATE FUNCTION F8(@BID INT)
RETURNS VARCHAR(20)
AS
BEGIN
DECLARE @BN VARCHAR(20)
SELECT @BN=BNAME FROM BOOKSTABLE WHERE BID=@BID
RETURN @BN
END
    SELECT DBO.F8(1)

--9) 
   CREATE PROC BOOKP(@BNO INT,@BNA VARCHAR(20),@PR SMALLINT,@PBD DATETIME)
   AS
   BEGIN
   SET NOCOUNT ON
   DECLARE @B INT
   SELECT @B=COUNT(*) FROM BOOKSTABLE WHERE BID=@BNO
   IF @B IS NULL
   PRINT 'NULL VALUES CANT INSERT'
   ELSE
   IF @BNA IS NULL
   PRINT 'INVALID NAME'
   ELSE
   IF @PR IS NULL 
   PRINT 'PRICE IS NOT VALID'
   ELSE
   IF @PBD IS NULL
   PRINT 'DATE IS INVALID'
   ELSE
   BEGIN 
     BEGIN TRAN
	 INSERT INTO BOOKSTABLE(BID,BNAME,PRICE,PUBLISHDATE)VALUES(@BNO,@BNA,@PR,@PBD)
	 PRINT 'RECORD INSERTED SUCCESSFULLY'
	 COMMIT
	 END
	 END
	   EXEC BOOKP 3,'MMM',500,'2019-03-01'
	   EXEC BOOKP 4,NULL,800,'2020-04-01'
	   SELECT *FROM BOOKSTABLE

--10)
ALTER TRIGGER TB1
ON BOOKSTABLE
FOR INSERT,DELETE
AS
BEGIN
IF DATENAME(DW,GETDATE()) NOT IN ('MONDAY','TUESDAY','WEDNESDAY','THURSDAY','FRIDAY','SATURDAY')
BEGIN
RAISERROR('CANT INSERT,DELETE',1,1)
ROLLBACK
END
END
    INSERT INTO BOOKSTABLE VALUES(5,'SAP',500,'2020-12-01')

--11)
CREATE PROC DYQ(@TN VARCHAR(20),@COL VARCHAR(20),@DT VARCHAR(20))
AS
BEGIN
EXEC('ALTER TABLE ' + @TN +' ADD'+' ' + @COL + ' '+@DT)
END

EXEC DYQ 'CUSTOMERSTABLE','GENDER','VARCHAR(12)'
SELECT *FROM CUSTOMERSTABLE

  
--12)
  DECLARE C1 CURSOR FOR SELECT *FROM BOOKSTABLE,CUSTOMERSTABLE WHERE BOOKSTABLE.BID=CUSTOMERSTABLE.BID
  DECLARE @BID INT,@BNA VARCHAR(20),@P INT,@PD DATETIME,@CID INT,@CNA VARCHAR(20),@BI INT
  OPEN C1
  FETCH NEXT FROM C1 INTO @BID,@BNA,@P,@PD,@CID,@CNA,@BI
  WHILE @@FETCH_STATUS=0
  BEGIN
  PRINT CAST(@BID AS VARCHAR)+' '+@BNA+'  '+CAST(@P AS VARCHAR)+'   '+CAST(@PD AS VARCHAR)+' '+CAST(@CID AS VARCHAR)+'   '+@CNA+' '+CAST(@BI AS VARCHAR)
  FETCH NEXT FROM C1 INTO @BID,@BNA,@P,@PD,@CID,@CNA,@BI
  END
  CLOSE C1
  DEALLOCATE C1


