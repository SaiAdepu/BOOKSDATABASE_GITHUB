                                     --DONE BY SPANDANA
--DATABASE CREATION
create Database BOOKSDATABASE
use BOOKSDATABASE

--BOOKS TABLE CREATION
create table BOOKSTABLE(BID INT PRIMARY KEY,BNAME VARCHAR(20) NOT NULL,PRICE SMALLMONEY NOT NULL,PUBLISHDATE DATETIME NOT NULL)
SP_HELP BOOKSTABLE

--CUSTOMERS TABLE CREATION
DROP TABLE CUSTOMERSTABLE
CREATE TABLE CUSTOMERSTABLE(CID INT PRIMARY KEY,CNAME VARCHAR(20) NOT NULL,BID INT FOREIGN KEY REFERENCES BOOKSTABLE(BID))
SP_HELP CUSTOMERSTABLE

--AUTHORS TABLE CREATION
CREATE TABLE AUTHORSTABLE(BID INT FOREIGN KEY REFERENCES BOOKSTABLE(BID),ANAME VARCHAR(20)NOT NULL,AID INT)
SP_HELP AUTHORSTABLE
-- UNIQUE INDEX FOR AUTHOR ID
CREATE UNIQUE INDEX ANO ON AUTHORSTABLE(AID)

begin TRANSACTION
--INSERTION OF RECORDS INTO BOOKS TABLE
INSERT INTO BOOKSTABLE VALUES(1,'C',120,'1978-02-22'),(2,'JAVA',350,'1995-08-01')
--INSERTION OF RECORDS INTO CUSTOMERS TABLE
INSERT INTO CUSTOMERSTABLE VALUES(1001,'CITY',1),(1002,'TOWN',2)
--INSERTION OF RECORDS INTO AUTHORS TABLE
INSERT INTO AUTHORSTABLE VALUES(1,'DENNIS RITCHIE',123),(2,'JAMES GOSLING',456)
COMMIT

--1)LIST THE BOOKS DETAILS WHICH BOOKS HAVE ATLEAST ONE AUTHOR,ONE CUSTOMER EXISTS.
SELECT *FROM BOOKSTABLE WHERE EXISTS(SELECT ANAME,CNAME FROM AUTHORSTABLE,CUSTOMERSTABLE WHERE 
AUTHORSTABLE.BID=BOOKSTABLE.BID OR CUSTOMERSTABLE.BID=BOOKSTABLE.BID)

--2)LIST ALL THE CUSTOMERS,BOOKS,AUTHORS DETAILS
SELECT A.*,B.*,C.* FROM BOOKSTABLE B,AUTHORSTABLE A,CUSTOMERSTABLE C

--3)TO PRINT THE BOOKS DETAILS WHICH BOOKS PUBLISHED DATE BETWEEN '01-DEC-2019' TO '04-APR-20'
SELECT *FROM BOOKSTABLE WHERE PUBLISHDATE BETWEEN '2019-12-01' AND '2020-04-04'

--4)LIST THE BOOKS DETAILS WHICH BOOK AT LEAST 3 OR MORE CUSTOMERS
SELECT BNAME,COUNT(CNAME) FROM BOOKSTABLE,CUSTOMERSTABLE WHERE BOOKSTABLE.BID=CUSTOMERSTABLE.BID GROUP BY BNAME HAVING COUNT(CNAME)>=3

--5)LIST THE BOOK DETAILS WHICH BOOK PRICE IS HIGHEST
SELECT *FROM BOOKSTABLE WHERE PRICE=(SELECT MAX(PRICE) FROM BOOKSTABLE)

--6)LIST THE CUSTOMER DETAILS WHICH CUSTOMER NOT TAKEN ANY BOOKS
SELECT *FROM CUSTOMERSTABLE WHERE NOT EXISTS(SELECT *FROM BOOKSTABLE WHERE CUSTOMERSTABLE.BID=BOOKSTABLE.BID)

--7)LIST THE TOTAL NUMBER OF AUTHORS,CUSTOMERS BASED ON BOOK ID
SELECT ANAME,CNAME,COUNT(ANAME),COUNT(CNAME) FROM AUTHORSTABLE,CUSTOMERSTABLE,BOOKSTABLE 
WHERE AUTHORSTABLE.BID=BOOKSTABLE.BID AND 
CUSTOMERSTABLE.BID=BOOKSTABLE.BID GROUP BY ANAME,CNAME WITH ROLLUP

--SELECT COUNT(ANAME),COUNT(CNAME) FROM AUTHORSTABLE A ,CUSTOMERSTABLE C  WHERE A.BID=C.BID   

--8)TO DISPLAY THE BOOK NAMES FOR GIVEN BOOK ID USING UID
CREATE FUNCTION F8(@BID INT)
RETURNS VARCHAR(20)
AS
BEGIN
DECLARE @BN VARCHAR(20)
SELECT @BN=BNAME FROM BOOKSTABLE WHERE BID=@BID
RETURN @BN
END
    SELECT DBO.F8(1)

--9)TO INSERT RECORD INTO BOOKS TABLE USING PROCEDURE
   CREATE PROC BOOKP(@BNO INT,@BNA VARCHAR(20),@PR SMALLINT,@PBD DATETIME)
   AS
   BEGIN
   SET NOCOUNT ON
   DECLARE @B INT
   SELECT @B=COUNT(*) FROM BOOKSTABLE WHERE BID=@BNO
   IF @B IS NULL
   PRINT 'NULL VALUES CANT INSERT'
   ELSE
   IF @BNA IS NULL
   PRINT 'INVALID NAME'
   ELSE
   IF @PR IS NULL 
   PRINT 'PRICE IS NOT VALID'
   ELSE
   IF @PBD IS NULL
   PRINT 'DATE IS INVALID'
   ELSE
   BEGIN 
     BEGIN TRAN
	 INSERT INTO BOOKSTABLE(BID,BNAME,PRICE,PUBLISHDATE)VALUES(@BNO,@BNA,@PR,@PBD)
	 PRINT 'RECORD INSERTED SUCCESSFULLY'
	 COMMIT
	 END
	 END
	   EXEC BOOKP 3,'MMM',500,'2019-03-01'
	   EXEC BOOKP 4,NULL,800,'2020-04-01'
	   SELECT *FROM BOOKSTABLE

--10)TO RESTRICT INSERTION OR DELETION ONLY TO ALLOW MONDAY TO SATURDAY ON BOOKS TABLE
ALTER TRIGGER TB1
ON BOOKSTABLE
FOR INSERT,DELETE
AS
BEGIN
IF DATENAME(DW,GETDATE()) NOT IN ('MONDAY','TUESDAY','WEDNESDAY','THURSDAY','FRIDAY','SATURDAY')
BEGIN
RAISERROR('CANT INSERT,DELETE',1,1)
ROLLBACK
END
END
    INSERT INTO BOOKSTABLE VALUES(5,'SAP',500,'2020-12-01')

--11)USING DYNAMIC QUERY PROCEDURE TO ADD 'GENDER' COLUMN IN CUSTOMER TABLE
CREATE PROC DYQ(@TN VARCHAR(20),@COL VARCHAR(20),@DT VARCHAR(20))
AS
BEGIN
--EXECUTING THE ALTER QUERY WITH VARIABLE NAME
EXEC('ALTER TABLE ' + @TN +' ADD'+' ' + @COL + ' '+@DT)
END
--EXECUTION 
EXEC DYQ 'CUSTOMERSTABLE','GENDER','VARCHAR(12)'
SELECT *FROM CUSTOMERSTABLE

  
--12)TO DISPLAY ALL RECORDS OF BOOKS,CUSTOMER DETAILS WHICH BOOK ID IS COMMON USING 'CURSOR'
  DECLARE C1 CURSOR FOR SELECT *FROM BOOKSTABLE,CUSTOMERSTABLE WHERE BOOKSTABLE.BID=CUSTOMERSTABLE.BID
--DECLARING VARIABLES
  DECLARE @BID INT,@BNA VARCHAR(20),@P INT,@PD DATETIME,@CID INT,@CNA VARCHAR(20),@BI INT
  OPEN C1
--INITIALIZING THE START POINT OF THE CURSOR
  FETCH NEXT FROM C1 INTO @BID,@BNA,@P,@PD,@CID,@CNA,@BI
--REPETATIVE CONTROL STRUCTURE
  WHILE @@FETCH_STATUS=0
  BEGIN
--PRINTING THE CURSOR
  PRINT CAST(@BID AS VARCHAR)+' '+@BNA+'  '+CAST(@P AS VARCHAR)+'   '+CAST(@PD AS VARCHAR)+' '+CAST(@CID AS VARCHAR)+'   '+@CNA+' '+CAST(@BI AS VARCHAR)
  FETCH NEXT FROM C1 INTO @BID,@BNA,@P,@PD,@CID,@CNA,@BI
  END
--CLOSING THE CURSOR
  CLOSE C1
--DEALLOCATING THE CURSOR
  DEALLOCATE C1


